name: Build AMI after merge

# ðŸ”” ONLY runs when code is pushed to main (i.e., after PR is merged)
on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test-build-ami:
    name: Run tests â†’ Build artifact â†’ Build AMI
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # 1) Check out code
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Node setup (use your runtime)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3) Install deps & run integration tests (Assignment-3)
      - name: Install & test
        run: |
          npm ci
          npm test

      # 4) Build artifact ON THE RUNNER (NOT inside AMI)
      - name: Build artifact (zip)
        run: |
          mkdir -p dist
          # Include exactly what your app needs to run in /opt/webapp
          zip -r dist/artifact.zip src package*.json

      # 5) Make artifact available to later steps
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp-artifact
          path: dist/artifact.zip

      # 6) Configure AWS CLI for DEV account (from Secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # 7) Install Packer (pin to match your local version)
      - name: Setup Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: '1.14.2'

      # 8) Download our built artifact into packer/dist so the "file" provisioner can find it
      - name: Download artifact for Packer
        uses: actions/download-artifact@v4
        with:
          name: webapp-artifact
          path: packer/dist

      # 9) Initialize Packer plugins (amazon-ebs)
      - name: packer init
        working-directory: packer
        run: packer init .

      # 10) Build AMI in DEV and share privately to DEMO
      - name: packer build (AMI)
        working-directory: packer
        env:
          PACKER_LOG: "1"
        run: |
          set -e
          echo "Starting Packer build..."
          packer build \
            -var "region=${{ secrets.AWS_REGION }}" \
            -var "demo_account_id=${{ secrets.DEMO_ACCOUNT_ID }}" \
            -var "app_port=${{ secrets.PORT || 8080 }}" \
            -var "db_password=${{ secrets.POSTGRES_PASSWORD }}" \
            ubuntu-webapp.pkr.hcl
